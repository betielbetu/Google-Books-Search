{"version":3,"sources":["api/books.api.js","helpers/misc.helpers.js","shared/messages.error.jsx","model/book.model.jsx","redux/actions/index.jsx","redux/constants/action-types.jsx","api/favorite.api.js","components/book/book.jsx","services/pagination.service.jsx","components/list/list.jsx","model/bookcollection.model.jsx","pages/home/home.jsx","components/header/header.jsx","pages/notfound/notfound.jsx","pages/favorite/favorites.jsx","App.js","redux/reducers/index.jsx","redux/store/index.jsx","index.js","assets/images/header.jpg"],"names":["BooksApi","URL","APIKEY","title","index","Promise","resolve","apiParams","key","this","q","startIndex","apiCall","p","Object","entries","map","kv","encodeURIComponent","join","axios","get","BookErrors","BookModel","singleBook","authors","description","image","link","pageCount","averageRating","categories","volumeInfo","id","imageLinks","thumbnail","infoLink","bookObject","updateBooks","payload","type","setFavorites","FavoriteApi","getIdUrl","favorite","post","favoriteId","deleteURL","delete","AppBook","props","favoriteApi","e","addFavorite","then","saveFavorite","deleteFavorite","deleteFavoriteBook","emptyHeart","size","icon","fullHeart","binoculars","isFavorite","favorites","includes","ListGroup","Item","Row","Col","xs","rel","target","href","src","alt","className","onClick","str","n","useWordBoundary","length","subString","substr","lastIndexOf","truncate","Component","connect","state","list","banana","name","dispatch","reject","updateSearch","Subject","paginationService","changePage","pageNumber","next","getPage","asObservable","AppList","showPagination","handlePageClick","page","updatePage","collectionName","collectionToUse","currentPage","collection","storeProps","booksToMap","books","Pagination","count","onChange","showFirstButton","showLastButton","siblingCount","boundaryCount","variant","shape","value","pageUpdate","BookCollection","bookSearch","AppHome","error","fetchingBooks","searchValue","errorMessage","oldSearchValue","defaultCollection","resultsPerPage","collectionSearch","doSearch","page_number","currentCollect","bookCollection","searchIndex","setState","booksApi","searchBooks","bookData","bookTotal","data","totalItems","rawBookData","items","x","Math","ceil","event","subscription","subscribe","getIds","unsubscribe","hasBooks","classes","Fragment","AppBar","position","Toolbar","IconButton","edge","menuButton","color","aria-label","Typography","noWrap","search","sm","Form","Control","placeholder","captureSearchValue","onKeyPress","keyPressed","Button","grow","bookUpdate","withStyles","theme","flexGrow","display","breakpoints","up","borderRadius","marginRight","spacing","marginLeft","width","AppHeader","Image","headerImage","fluid","Navbar","bg","Nav","to","exact","Link","NotFound","AppFavorites","getFavorites","bookIds","total","book","createFromObject","updateFavoriteList","library","add","far","fas","App","Container","path","component","initialState","books_home","books_favorite","rootReducer","action","collectionToUpdate","collectionState","assign","filter","store","createStore","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.d6cd8bca.chunk.js","sourcesContent":["import axios from 'axios';\nimport {encodeGetParams} from '../helpers/misc.helpers';\n\nclass BooksApi {\n     URL = 'https://www.googleapis.com/books/v1/volumes';\n     APIKEY = 'AIzaSyBJYy5-SBnX5meFC9Sf6Wcy7ucrTHusu-4';\n\n     async searchBooks(title, index) {\n     \tif (!title) {\n     \t\treturn Promise.resolve(null);\n     \t}\n     \tconst apiParams = {key: this.APIKEY, q: title, startIndex: index};\n     \tconst apiCall = `${this.URL}?${encodeGetParams(apiParams)}`;\n     \treturn axios.get(apiCall);\n     }\n}\n\nexport default BooksApi;\n","const encodeGetParams = (p) => Object.entries(p).map(kv => kv.map(encodeURIComponent).join(\"=\")).join(\"&\");\n\nconst truncate = ( str, n, useWordBoundary ) => {\n\tif (!str || str.length <= n) { return str; }\n\tconst subString = str.substr(0, n-1); // the original check\n\treturn (useWordBoundary\n\t\t? subString.substr(0, subString.lastIndexOf(\" \"))\n\t\t: subString) + \" ...\";\n};\n\nexport {encodeGetParams, truncate};\n","const BookErrors = {\n\tnosearch: 'No search entered, please try again...',\n\tnobooks: 'Sorry, no books with that name found...'\n}\n\nexport {BookErrors};\n","class BookModel {\n     title = '';\n     authors = [];\n     description = ''\n     image = '';\n     link = '';\n     pageCount = 0;\n     averageRating = 0;\n     categories = [];\n\n     constructor(singleBook) {\n     \tconst volumeInfo = singleBook && singleBook.volumeInfo;\n     \tif (!volumeInfo) {\n     \t\treturn;\n     \t}\n     \tthis.id = singleBook.id;\n     \tthis.title = volumeInfo.title;\n     \tthis.authors = volumeInfo.authors;\n     \tthis.description = volumeInfo.description;\n     \tthis.image = volumeInfo.imageLinks && volumeInfo.imageLinks.thumbnail;\n     \tthis.link = volumeInfo.infoLink;\n     \tthis.pageCount = volumeInfo.pageCount;\n     \tthis.averageRating = volumeInfo.averageRating;\n     \tthis.categories = volumeInfo.categories;\n     }\n\n     createFromObject(bookObject){\n     \tif (!bookObject){\n     \t\treturn;\n     \t}\n\n     \tthis.id = bookObject.id;\n     \tthis.title = bookObject.title;\n     \tthis.authors = bookObject.authors;\n     \tthis.description = bookObject.description;\n     \tthis.image = bookObject.image;\n     \tthis.link = bookObject.link;\n     \tthis.pageCount = bookObject.pageCount;\n     \tthis.averageRating = bookObject.averageRating;\n     \tthis.categories = bookObject.categories;\n     }\n}\n\nexport default BookModel;\n","import * as actionTypes from '../constants/action-types';\n\nexport const updateBooks = (payload) => ({type: actionTypes.UPDATE_BOOKS, payload});\nexport const updatePage = (payload) => ({type: actionTypes.UPDATE_PAGE, payload});\nexport const addFavorite = (payload) => ({type: actionTypes.ADD_FAVORITE, payload});\nexport const deleteFavorite = (payload) => ({type: actionTypes.DELETE_FAVORITE, payload});\nexport const setFavorites = (payload) => ({type: actionTypes.SET_FAVORITES, payload});\nexport const deleteFavoriteBook = (payload) => ({type: actionTypes.DELETE_FAVORITE_BOOK, payload});\n","export const UPDATE_BOOKS = 'UPDATE_BOOKS';\nexport const ADD_FAVORITE = 'ADD_FAVORITE';\nexport const DELETE_FAVORITE = 'DELETE_FAVORITE';\nexport const UPDATE_PAGE = 'UPDATE_PAGE';\nexport const SET_FAVORITES = 'SET_FAVORITES';\nexport const DELETE_FAVORITE_BOOK = 'DELETE_FAVORITE_BOOK';\n","import axios from 'axios';\n\nclass FavoriteApi {\n     URL = '/books';\n\n     async getIds() {\n     \tconst getIdUrl = `${this.URL}/id`;\n     \treturn axios.get(getIdUrl);\n     }\n     async saveFavorite(favorite) {\n     \treturn axios.post(this.URL, {\n     \t\tfavorite: favorite\n     \t});\n     }\n\n     async deleteFavorite(favoriteId) {\n     \tconst deleteURL = `${this.URL}/${favoriteId}`;\n    \t     return axios.delete(deleteURL);\n     }\n\n     async getFavorites() {\n    \t     return axios.get(this.URL);\n     }\n}\n\nexport default FavoriteApi;\n","import React, {Component} from 'react';\nimport {Row, Col, ListGroup} from 'react-bootstrap'\nimport {connect} from \"react-redux\";\nimport {addFavorite, deleteFavorite, deleteFavoriteBook} from \"../../redux/actions\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { truncate } from \"../../helpers/misc.helpers\";\nimport './book.css';\nimport FavoriteApi from \"../../api/favorite.api\";\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tfavorites: state.list,\n\t\tbanana: state.name,\n\t};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\taddFavorite: (favoriteId) => new Promise( (resolve, reject) => {\n\t\t\tdispatch(addFavorite(favoriteId));\n\t\t\tresolve();\n\t\t}),\n\t\tdeleteFavorite: (favoriteId) => new Promise((resolve, reject) => {\n\t\t\tdispatch(deleteFavorite(favoriteId))\n\t\t\tresolve();\n\t\t}),\n\t\tdeleteFavoriteBook: (favoriteId) => {\n\t\t\tdispatch(deleteFavoriteBook(favoriteId))\n\t\t},\n\t};\n};\n\nclass AppBook extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.favoriteApi = new FavoriteApi();\n\t}\n\n\taddFavorite(e) {\n\t\tif (!e) {\n\t\t\treturn;\n\t\t}\n\t\tthis.props.addFavorite({favorite: e}).then(() => this.favoriteApi.saveFavorite(this.props.singleBook));\n\t}\n\n\tdeleteFavorite(e) {\n\t\tif (!e) {\n\t\t\treturn;\n\t\t}\n\t\tthis.props.deleteFavorite({favorite: e}).then(() => this.favoriteApi.deleteFavorite(e));\n\t\tthis.props.deleteFavoriteBook({id: e});\n\t}\n\n\trender() {\n\t\tconst singleBook = this.props.singleBook;\n\t\tconst emptyHeart = <FontAwesomeIcon size=\"2x\" icon={[\"far\", \"heart\"]}/>\n\t\tconst fullHeart = <FontAwesomeIcon size=\"2x\" icon={[\"fas\", \"heart\"]}/>\n\t\tconst binoculars = <FontAwesomeIcon size=\"2x\" icon={[\"fas\", \"binoculars\"]}/>\n\t\tconst isFavorite = this.props.favorites && this.props.favorites.includes(singleBook.id);\n\t\treturn (\n\t\t\t<ListGroup.Item>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col xs={2}><a rel=\"noopener noreferrer\" target={\"_blank\"} href={singleBook.link}><img\n\t\t\t\t\t\tsrc={singleBook.image} alt={singleBook.title}/></a></Col>\n\t\t\t\t\t<Col xs={10}>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t<span className=\"book-label-title mr-2\"><a rel=\"noopener noreferrer\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t   target={\"_blank\"}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t   href={singleBook.link}>{singleBook.title}</a></span>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t<Col className=\"position-relative\">\n\t\t\t\t\t\t\t\t<span className=\"position-absolute corner-binoculars\" title=\"View Book\">\n\t\t\t\t\t\t\t\t\t{singleBook.link\n\t\t\t\t\t\t\t\t\t\t? <a rel=\"noopener noreferrer\" target={\"_blank\"}\n\t\t\t\t\t\t\t\t\t\t\t href={singleBook.link}>{binoculars}</a>\n\t\t\t\t\t\t\t\t\t\t:''\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t<span className=\"position-absolute corner-heart\">\n\t\t\t\t\t\t\t\t\t{isFavorite\n\t\t\t\t\t\t\t\t\t\t? <span className=\"pointer\" title=\"Remove from Favorites\"\n\t\t\t\t\t\t\t\t\t\t\t   onClick={(e) => this.deleteFavorite(singleBook.id)}>{fullHeart}</span>\n\t\t\t\t\t\t\t\t\t\t: <span className=\"pointer\" title=\"Add to Favorites\"\n\t\t\t\t\t\t\t\t\t\t\t   onClick={(e) => this.addFavorite(singleBook.id)}>{emptyHeart}</span>}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<Row><Col><span\n\t\t\t\t\t\t\tclassName=\"font-weight-bold mr-1\">By:</span> {singleBook.authors ? singleBook.authors.join(\", \"): ''}\n\t\t\t\t\t\t</Col></Row>\n\t\t\t\t\t\t<Row className=\"mt-3\"><Col><span\n\t\t\t\t\t\t\tclassName=\"font-weight-bold mr-1\">Description:</span>{truncate(singleBook.description, 1000, true)}\n\t\t\t\t\t\t</Col></Row>\n\t\t\t\t\t\t<Row className=\"mt-2\"><Col><span\n\t\t\t\t\t\t\tclassName=\"font-weight-bold\">Categories: </span>{singleBook.categories ? singleBook.categories.join(\", \") : ''}\n\t\t\t\t\t\t</Col></Row>\n\t\t\t\t\t\t<Row className=\"mt-2\"><Col><span\n\t\t\t\t\t\t\tclassName=\"font-weight-bold\">Pages: </span>{singleBook.pageCount}</Col><Col><span\n\t\t\t\t\t\t\tclassName=\"font-weight-bold\">Average Rating: </span>{singleBook.averageRating ? singleBook.averageRating : 'N/A'}\n\t\t\t\t\t\t</Col></Row>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</ListGroup.Item>\n\t\t);\n\t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AppBook);\n","import {Subject} from 'rxjs'\n\nconst updateSearch = new Subject();\n\nconst paginationService = {\n\tchangePage: pageNumber => updateSearch.next(pageNumber),\n\tgetPage: () => updateSearch.asObservable()\n}\n\nexport default paginationService;\n","import React, {Component} from 'react';\nimport {Row, Col} from 'react-bootstrap';\nimport {connect} from 'react-redux';\nimport ListGroup from 'react-bootstrap/ListGroup'\nimport { updatePage} from \"../../redux/actions\";\nimport AppBook from \"../book/book\";\nimport './list.css';\nimport Pagination from '@material-ui/lab/Pagination';\nimport paginationService from \"../../services/pagination.service\";\n\nconst mapStateToProps = (state) => {\n\tconst storeProps = {};\n\tfor (const [key, value] of Object.entries(state)){\n\t\tstoreProps[key] = value;\n\t}\n\treturn {\n\t\tstoreProps\n\t};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tupdatePage: (pageUpdate) => new Promise( (resolve, reject) => {\n\t\t\tdispatch(updatePage(pageUpdate));\n\t\t\tresolve();\n\t\t}),\n\t};\n};\n\nclass AppList extends Component {\n\tstate = {\n\t\tshowPagination: true,\n\t};\n\n\thandlePageClick = (e, page) => {\n\t\tthis.props.updatePage({collectionName: this.props.collectionToUse, currentPage: page})\n\t\t\t.then(() => {\n\t\t\t\tpaginationService.changePage(page);\n\t\t\t});\n\t}\n\n\trender() {\n\t\tconst collection = this.props.storeProps[this.props.collectionToUse];\n\t\tconst booksToMap = collection.books;\n\t\tconst pageCount = collection.pageCount;\n\t\tconst showPagination = this.props.showPagination === true || this.props.showPagination === false\n\t\t\t? this.props.showPagination : this.state.showPagination;\n\t\tconst currentPage = collection.currentPage || 1;\n\t\treturn (\n\t\t\t<Col>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<ListGroup>\n\t\t\t\t\t\t\t{booksToMap.map((singleBook, index) => (\n\t\t\t\t\t\t\t\t<AppBook key={index} singleBook={singleBook}/>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</ListGroup>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row className=\"mt-2\">\n\t\t\t\t\t<Col className=\"text-center\">\n\t\t\t\t\t\t{showPagination\n\t\t\t\t\t\t\t? <Pagination className=\"pagination-class\" count={pageCount}\n\t\t\t\t\t\t\t\t\t    page={currentPage}\n\t\t\t\t\t\t\t\t\t    onChange={this.handlePageClick} showFirstButton\n\t\t\t\t\t\t\t\t\t    showLastButton siblingCount={2} boundaryCount={2} size=\"large\" variant=\"outlined\" shape=\"rounded\" />\n\t\t\t\t\t\t\t: ''}\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Col>\n\t\t);\n\t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AppList);\n","class BookCollection {\n    books = [];\n    pageCount = 1;\n    currentPage = 1;\n    bookSearch = '';\n}\n\nexport default BookCollection;\n","import React, {Component} from 'react';\nimport {Button, Col, Form, Row} from 'react-bootstrap';\nimport BooksApi from '../../api/books.api';\nimport {BookErrors} from '../../shared/messages.error';\nimport BookModel from '../../model/book.model';\nimport {connect} from 'react-redux';\nimport AppList from '../../components/list/list';\nimport {setFavorites, updateBooks} from \"../../redux/actions\";\nimport BookCollection from \"../../model/bookcollection.model\";\nimport paginationService from \"../../services/pagination.service\";\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport {withStyles} from \"@material-ui/core/styles\";\nimport FavoriteApi from \"../../api/favorite.api\";\nimport './home.css';\n\nconst mapStateToProps = (state) => {\n\tconst storeProps = {};\n\tfor (const [key, value] of Object.entries(state)) {\n\t\tstoreProps[key] = value;\n\t}\n\treturn {\n\t\tstoreProps\n\t};\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n\tupdateBooks: (bookUpdate) => new Promise((resolve, reject) => {\n\t\tdispatch(updateBooks(bookUpdate));\n\t\tresolve();\n\t}),\n\tsetFavorites: (favorites) => {\n\t\tdispatch(setFavorites(favorites))\n\t}\n});\n\nconst useStyles = theme => ({\n\tgrow: {\n\t\tflexGrow: 1,\n\t},\n\ttitle: {\n\t\tdisplay: 'none',\n\t\t[theme.breakpoints.up('sm')]: {\n\t\t\tdisplay: 'block',\n\t\t},\n\t},\n\tsearch: {\n\t\tposition: 'relative',\n\t\tborderRadius: theme.shape.borderRadius,\n\t\tmarginRight: theme.spacing(2),\n\t\tmarginLeft: 0,\n\t\twidth: '100%',\n\t\t[theme.breakpoints.up('sm')]: {\n\t\t\tmarginLeft: theme.spacing(3),\n\t\t\twidth: 'auto',\n\t\t},\n\t}\n});\n\nclass AppHome extends Component {\n     state = {\n     \terror: false,\n     \tfetchingBooks: false,\n     \tsearchValue: '',\n     \terrorMessage: '',\n     \toldSearchValue: '',\n     \tdefaultCollection: 'books_home',\n     \tresultsPerPage: 10,\n     \tcurrentPage: 1,\n     \tcollectionSearch: '',\n     };\n\n     constructor(props) {\n     \tsuper(props);\n     \tthis.booksApi = new BooksApi();\n     \tthis.favoriteApi = new FavoriteApi();\n     }\n\n     captureSearchValue(event) {\n     \tthis.setState({searchValue: event.target.value, collectionSearch: event.target.value});\n     }\n\n     keyPressed(event) {\n     \tif (event.key === 'Enter') {\n     \t\tthis.doSearch();\n     \t}\n     }\n\n\n     componentDidMount() {\n     \tthis.subscription = paginationService.getPage().subscribe(pageNumber => {\n     \t\tthis.doSearch(pageNumber);\n     \t})\n     \t//get the favorites from the backend\n     \tthis.favoriteApi.getIds()\n     \t\t.then((favorites) => {\n     \t\t\tif (!favorites && !favorites.data) {\n     \t\t\t\treturn;\n     \t\t\t}\n     \t\t\tthis.props.setFavorites({favorites: favorites.data});\n     \t\t});\n     \t//check to see if our collection has any books from a previous search\n     \tconst currentCollect = this.props.storeProps[this.state.defaultCollection];\n     \tif (currentCollect && currentCollect.books && currentCollect.books.length > 0) {\n     \t\t//get the search value too\n     \t\tconst bookSearch = currentCollect.bookSearch || '';\n     \t\tthis.setState({collectionSearch: bookSearch, oldSearchValue: bookSearch, searchValue: bookSearch});\n     \t}\n     }\n\n     componentWillUnmount() {\n     \tthis.subscription.unsubscribe();\n     }\n\n     doSearch = (page_number) => {\n     \t// get collection\n     \tconst currentCollect = this.props.storeProps[this.state.defaultCollection];\n     \tconst bookCollection = currentCollect ? currentCollect : new BookCollection();\n     \tlet currentPage = page_number ? page_number : bookCollection.currentPage;\n     \tlet searchIndex = (currentPage - 1) * this.state.resultsPerPage;\n     \tconst oldSearchValue = this.state.oldSearchValue;\n     \tthis.setState({error: false});\n\n     \tconst searchValue = this.state.searchValue;\n     \tif (!searchValue) {\n     \t\tthis.setState({error: true, errorMessage: BookErrors.nosearch});\n     \t\treturn;\n     \t}\n\n     \t// reset pagination info on new search\n     \tif (searchValue !== oldSearchValue) {\n     \t\tsearchIndex = 0;\n     \t\tcurrentPage = 1;\n     \t}\n\n     \tthis.setState({fetchingBooks: true});\n     \tthis.booksApi.searchBooks(searchValue, searchIndex)\n     \t\t.then((bookData) => {\n     \t\t\tthis.setState({fetchingBooks: false});\n     \t\t\tconst bookTotal = bookData && bookData.data && bookData.data.totalItems;\n     \t\t\tconst rawBookData = bookData && bookData.data && bookData.data.items;\n     \t\t\tif (!rawBookData) {\n     \t\t\t\tthis.setState({error: true, errorMessage: BookErrors.nobooks});\n     \t\t\t\treturn;\n     \t\t\t}\n     \t\t\tconst books = rawBookData.map((x) => new BookModel(x));\n     \t\t\tconst pageCount = Math.ceil(bookTotal / this.state.resultsPerPage);\n     \t\t\tthis.props.updateBooks({\n     \t\t\t\tcollectionName: this.state.defaultCollection,\n     \t\t\t\tbooks: books,\n     \t\t\t\tpageCount: pageCount > 50 ? 40 : pageCount,\n     \t\t\t\tcurrentPage: currentPage,\n     \t\t\t\tbookSearch: searchValue,\n     \t\t\t}).then(() => {\n     \t\t\t\tthis.setState({error: false, oldSearchValue: searchValue});\n     \t\t\t});\n\n     \t\t});\n     }\n\n     render() {\n     \tconst error = this.state.error;\n     \tconst fetchingBooks = this.state.fetchingBooks;\n     \tconst currentCollect = this.props.storeProps[this.state.defaultCollection];\n     \tconst hasBooks = currentCollect && currentCollect.books && currentCollect.books.length > 0;\n     \tconst errorMessage = this.state.errorMessage;\n     \tconst bookCollection = this.state.defaultCollection;\n     \tconst {classes} = this.props;\n     \treturn (\n     \t\t<React.Fragment>\n     \t\t\t<Row>\n     \t\t\t\t<Col>\n     \t\t\t\t\t<AppBar position=\"static\">\n     \t\t\t\t\t\t<Toolbar>\n     \t\t\t\t\t\t\t<IconButton\n     \t\t\t\t\t\t\t\tedge=\"start\"\n     \t\t\t\t\t\t\t\tclassName={classes.menuButton}\n     \t\t\t\t\t\t\t\tcolor=\"inherit\"\n     \t\t\t\t\t\t\t\taria-label=\"open drawer\"\n     \t\t\t\t\t\t\t>\n     \t\t\t\t\t\t\t</IconButton>\n     \t\t\t\t\t\t\t<Typography className={classes.title} variant=\"h6\" noWrap>\n                                             Search Books\n     \t\t\t\t\t\t\t</Typography>\n     \t\t\t\t\t\t\t<div className={classes.search}>\n     \t\t\t\t\t\t\t\t<Row className=\"px-0\">\n     \t\t\t\t\t\t\t\t\t<Col sm={8} className=\"px-0 mr-3\">\n     \t\t\t\t\t\t\t\t\t\t<Form.Control type=\"email\" placeholder=\"Search\"\n     \t\t\t\t\t\t\t\t\t\t\tonChange={(e) => this.captureSearchValue(e)}\n     \t\t\t\t\t\t\t\t\t\t\tonKeyPress={(e) => this.keyPressed(e)}\n     \t\t\t\t\t\t\t\t\t\t\tvalue={this.state.collectionSearch}/>\n     \t\t\t\t\t\t\t\t\t</Col>\n     \t\t\t\t\t\t\t\t\t<Col sm={3} className=\"px-0\">\n     \t\t\t\t\t\t\t\t\t\t<Button onClick={(e) =>this.doSearch()} variant=\"primary\" type=\"button\">Search</Button>\n     \t\t\t\t\t\t\t\t\t</Col>\n     \t\t\t\t\t\t\t\t</Row>\n     \t\t\t\t\t\t\t</div>\n     \t\t\t\t\t\t\t<div className={classes.grow}/>\n     \t\t\t\t\t\t</Toolbar>\n     \t\t\t\t\t</AppBar>\n     \t\t\t\t</Col>\n     \t\t\t</Row>\n     \t\t\t<Row className=\"mt-2\">\n     \t\t\t\t{hasBooks ? <AppList collectionToUse={bookCollection}/> : fetchingBooks ?\n     \t\t\t\t\t<Col className=\"text-center fetching-books\">Searching for books...</Col> :\n     \t\t\t\t\terror ? <Col className=\"text-center error-message\">{errorMessage}</Col> : <Col className=\"mt-5 text-center\"><span className=\"no-books\">Type in search to find books</span></Col>}\n     \t\t\t</Row>\n     \t\t</React.Fragment>);\n     }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(useStyles)(AppHome));\n","import React from \"react\";\nimport { Image, Navbar, Nav, Row, Col} from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport headerImage from \"../../assets/images/header.jpg\"\nimport './header.css';\n\nconst AppHeader = () => {\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Row className=\"mb-2 mt-1\">\n\t\t\t\t<Col>\n\t\t\t\t\t<Image className=\"header-image\" src={headerImage} fluid />\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t\t<Row className=\"mb-2\">\n\t\t\t\t<Col>\n\t\t\t\t\t<Navbar bg=\"secondary\" variant=\"dark\" className=\"justify-content-end\">\n\t\t\t\t\t\t<Nav className=\"ml-auto\">\n\t\t\t\t\t\t\t<LinkContainer to=\"/\" exact={true}>\n\t\t\t\t\t\t\t\t<Nav.Link>Search</Nav.Link>\n\t\t\t\t\t\t\t</LinkContainer>\n\t\t\t\t\t\t\t<LinkContainer to=\"/favorites\">\n\t\t\t\t\t\t\t\t<Nav.Link>Favorites</Nav.Link>\n\t\t\t\t\t\t\t</LinkContainer>\n\t\t\t\t\t\t</Nav>\n\t\t\t\t\t</Navbar>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</React.Fragment>\n\t);\n}\nexport default AppHeader\n","import React from \"react\";\nimport \"./notfound.css\";\n\nexport default function NotFound() {\n\treturn (\n\t\t<div className=\"NotFound\">\n\t\t\t<h3>Sorry, page not found!</h3>\n\t\t</div>\n\t);\n}\n","import React, {Component} from 'react';\nimport {setFavorites, updateBooks} from \"../../redux/actions\";\nimport {Row, Col} from 'react-bootstrap';\nimport {connect} from 'react-redux';\nimport AppList from '../../components/list/list';\nimport FavoriteApi from \"../../api/favorite.api\";\nimport BookModel from \"../../model/book.model\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport './favorites.css';\n\nconst mapStateToProps = (state) => {\n\tconst storeProps = {};\n\tfor (const [key, value] of Object.entries(state)){\n\t\tstoreProps[key] = value;\n\t}\n\treturn {\n\t\tstoreProps\n\t};\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n\tupdateBooks: (bookUpdate) => new Promise((resolve, reject) => {\n\t\tdispatch(updateBooks(bookUpdate));\n\t\tresolve();\n\t}),\n\tsetFavorites: (favorites) => {\n\t\tdispatch(setFavorites(favorites))\n\t}\n});\n\nconst useStyles = theme => ({\n\tgrow: {\n\t\tflexGrow: 1,\n\t},\n\ttitle: {\n\t\tdisplay: 'none',\n\t\t[theme.breakpoints.up('sm')]: {\n\t\t\tdisplay: 'block',\n\t\t},\n\t},\n});\n\nclass AppFavorites extends Component {\n\tstate = {\n\t\terror: false,\n\t\tfetchingBooks: false,\n\t\terrorMessage: '',\n\t\tdefaultCollection: 'books_favorite',\n\t\tresultsPerPage: 10,\n\t\tcurrentPage: 1\n\t};\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.favoriteApi = new FavoriteApi();\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.getFavorites();\n\t}\n\n\tupdateFavoriteList(books) {\n\t\tif (this.props.storeProps.list && this.props.storeProps.list.length !== 0){ return; }\n\t\tconst bookIds = books.map(x => x.id);\n\t\tthis.props.setFavorites({favorites: bookIds});\n\t}\n\n\tgetFavorites() {\n\t\tthis.favoriteApi.getFavorites()\n\t\t\t.then((favorites) => {\n\t\t\t\tif (!favorites && !favorites.data){\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst total = favorites.data.length;\n\t\t\t\tconst rawData = favorites.data;\n\t\t\t\tconst books = rawData.map((x) => {\n\t\t\t\t\tconst book = new BookModel();\n\t\t\t\t\tbook.createFromObject(x);\n\t\t\t\t\treturn book;\n\t\t\t\t});\n\t\t\t\tconst pageCount = Math.ceil(total / this.state.resultsPerPage);\n\t\t\t\tthis.updateFavoriteList(books);\n\t\t\t\tthis.props.updateBooks({\n\t\t\t\t\tcollectionName: this.state.defaultCollection,\n\t\t\t\t\tbooks: books,\n\t\t\t\t\tpageCount: pageCount > 50 ? 40 : pageCount,\n\t\t\t\t\tcurrentPage: this.state.currentPage,\n\t\t\t\t}).then(() => {\n\t\t\t\t\tthis.setState({error: false});\n\t\t\t\t});\n\t\t\t})\n\t}\n\n\trender() {\n\t\tconst error = this.state.error;\n\t\tconst fetchingBooks = this.state.fetchingBooks;\n\t\tconst errorMessage = this.state.errorMessage;\n\t\tconst bookCollection = this.state.defaultCollection;\n\t\tconst currentCollect = this.props.storeProps[this.state.defaultCollection];\n\t\tconst hasBooks = currentCollect && currentCollect.books && currentCollect.books.length > 0;\n\t\tconst {classes} = this.props;\n\t\treturn (<React.Fragment>\n\t\t\t<Row>\n\t\t\t\t<Col>\n\t\t\t\t\t<AppBar position=\"static\">\n\t\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\tedge=\"start\"\n\t\t\t\t\t\t\t\tclassName={classes.menuButton}\n\t\t\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\t\t\taria-label=\"open drawer\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t<Typography className={classes.title} variant=\"h6\" noWrap>\n\t\t\t\t\t\t\t\tFavorites\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<div className={classes.grow}/>\n\t\t\t\t\t\t</Toolbar>\n\t\t\t\t\t</AppBar>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t\t<Row>\n\t\t\t\t{hasBooks ? <AppList showPagination = {false} collectionToUse = {bookCollection}/> : fetchingBooks ?\n\t\t\t\t\t<Col className=\"text-center fetching-books\">Loading Favorites....</Col> :\n\t\t\t\t\terror ? <Col className=\"text-center\">{errorMessage}</Col> : <Col className=\"text-center mt-5\"><span className=\"no-favorites\">No Favorites, Go Add A Favorite!</span></Col>}\n\t\t\t</Row>\n\t\t</React.Fragment>);\n\t}\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(useStyles)(AppFavorites));\n","import React from 'react';\nimport './App.css';\nimport {Switch, Route} from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport AppHome from \"./pages/home/home\";\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { fas } from '@fortawesome/free-solid-svg-icons'\nimport { far } from '@fortawesome/free-regular-svg-icons'\nimport {Container} from \"react-bootstrap\";\nimport AppHeader from \"./components/header/header\";\nimport NotFound from \"./pages/notfound/notfound\";\nimport AppFavorites from \"./pages/favorite/favorites\";\nlibrary.add(far, fas);\n\nfunction App() {\n\treturn (\n\t\t<Container>\n\t\t\t<AppHeader/>\n\t\t\t<Switch>\n\t\t\t\t<Route path=\"/\" component={AppHome} exact />\n\t\t\t\t<Route path=\"/search\" component={AppHome} exact />\n\t\t\t\t<Route path=\"/favorites\" component={AppFavorites} exact />\n\t\t\t\t<Route component={NotFound} />\n\t\t\t</Switch>\n\t\t</Container>\n\t)\n}\n\nexport default App;\n","import {ADD_FAVORITE, DELETE_FAVORITE, DELETE_FAVORITE_BOOK, SET_FAVORITES, UPDATE_BOOKS, UPDATE_PAGE} from '../constants/action-types';\nimport BookCollection from \"../../model/bookcollection.model\";\n\nconst initialState = {\n\tbooks_home: BookCollection,\n\tbooks_favorite: BookCollection,\n\tlist: [],\n\tname: '',\n};\n\nconst rootReducer = (state = initialState, action) => {\n\tif (action.type === UPDATE_BOOKS) {\n\t\tconst collectionToUpdate = action.payload.collectionName;\n\t\tconst collectionState = new BookCollection();\n\t\tObject.assign(collectionState,{\n\t\t\tbooks: action.payload.books,\n\t\t\tresultsPerPage: action.payload.resultsPerPage,\n\t\t\tpageCount: action.payload.pageCount,\n\t\t\tcurrentPage: action.payload.currentPage,\n\t\t\tbookSearch: action.payload.bookSearch\n\t\t})\n\t\treturn {...state, [collectionToUpdate]: collectionState};\n\t}\n\n\tif (action.type === UPDATE_PAGE) {\n\t\tconst collectionToUpdate = action.payload.collectionName;\n\t\tlet collectionState = state[collectionToUpdate];\n\t\tObject.assign(collectionState, {\n\t\t\tcurrentPage: action.payload.currentPage,\n\t\t});\n\t\treturn {...state, collectionState};\n\t}\n\n\tif (action.type === ADD_FAVORITE) {\n\t\treturn {...state, list: [...state.list, action.payload.favorite]};\n\t}\n\t\n\tif (action.type === DELETE_FAVORITE_BOOK){\n\t\t//used a specific name here, because it's one call, would use a generic for multiple lists\n\t\treturn {\n\t\t\t...state,\n\t\t\tbooks_favorite: {\n\t\t\t\t...state.books_favorite,\n\t\t\t\tbooks: state.books_favorite.books.filter(x => x.id !== action.payload.id)\n\t\t\t}\n\t\t};\n\t}\n\n\tif (action.type === DELETE_FAVORITE) {\n\t\treturn {...state, list: state.list.filter(x => x !== action.payload.favorite)};\n\t}\n\n\tif (action.type === SET_FAVORITES) {\n\t\treturn {...state, list: [...state.list,...action.payload.favorites]};\n\t}\n\treturn state;\n};\n\nexport default rootReducer;\n","import {createStore} from 'redux';\nimport rootReducer from '../reducers';\n\nconst store = createStore(rootReducer);\n\nexport default store;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store/index';\n\nrender(\n\t<Provider store={store}>\n\t\t<BrowserRouter>\n\t\t\t<App />\n\t\t</BrowserRouter>\n\t</Provider>,\n\tdocument.getElementById('root')\n);\n","module.exports = __webpack_public_path__ + \"static/media/header.1f87e58f.jpg\";"],"sourceRoot":""}